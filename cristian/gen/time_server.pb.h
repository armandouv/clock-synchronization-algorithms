// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: time_server.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_time_5fserver_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_time_5fserver_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>

#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

#define PROTOBUF_INTERNAL_EXPORT_time_5fserver_2eproto
PROTOBUF_NAMESPACE_OPEN
        namespace internal {
            class AnyMetadata;
        }  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_time_5fserver_2eproto {
    static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
            PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
            PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
            PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
    static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
    static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_time_5fserver_2eproto;

class GetTimeRequest;

struct GetTimeRequestDefaultTypeInternal;
extern GetTimeRequestDefaultTypeInternal _GetTimeRequest_default_instance_;

class SetTimeResponse;

struct SetTimeResponseDefaultTypeInternal;
extern SetTimeResponseDefaultTypeInternal _SetTimeResponse_default_instance_;

class Timespec;

struct TimespecDefaultTypeInternal;
extern TimespecDefaultTypeInternal _Timespec_default_instance_;
PROTOBUF_NAMESPACE_OPEN
        template<>
        ::GetTimeRequest *Arena::CreateMaybeMessage<::GetTimeRequest>(Arena *);

        template<>
        ::SetTimeResponse *Arena::CreateMaybeMessage<::SetTimeResponse>(Arena *);

        template<>
        ::Timespec *Arena::CreateMaybeMessage<::Timespec>(Arena *);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class GetTimeRequest final :
        public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:GetTimeRequest) */ {
public:
    inline GetTimeRequest() : GetTimeRequest(nullptr) {}

    explicit constexpr GetTimeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

    GetTimeRequest(const GetTimeRequest &from);

    GetTimeRequest(GetTimeRequest &&from) noexcept
            : GetTimeRequest() {
        *this = ::std::move(from);
    }

    inline GetTimeRequest &operator=(const GetTimeRequest &from) {
        CopyFrom(from);
        return *this;
    }

    inline GetTimeRequest &operator=(GetTimeRequest &&from) noexcept {
        if (this == &from) return *this;
        if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
                ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    static const ::PROTOBUF_NAMESPACE_ID::Descriptor *descriptor() {
        return GetDescriptor();
    }

    static const ::PROTOBUF_NAMESPACE_ID::Descriptor *GetDescriptor() {
        return default_instance().GetMetadata().descriptor;
    }

    static const ::PROTOBUF_NAMESPACE_ID::Reflection *GetReflection() {
        return default_instance().GetMetadata().reflection;
    }

    static const GetTimeRequest &default_instance() {
        return *internal_default_instance();
    }

    static inline const GetTimeRequest *internal_default_instance() {
        return reinterpret_cast<const GetTimeRequest *>(
                &_GetTimeRequest_default_instance_);
    }

    static constexpr int kIndexInFileMessages =
            0;

    friend void swap(GetTimeRequest &a, GetTimeRequest &b) {
        a.Swap(&b);
    }

    inline void Swap(GetTimeRequest *other) {
        if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetOwningArena() != nullptr &&
            GetOwningArena() == other->GetOwningArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetOwningArena() == other->GetOwningArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
        }
    }

    void UnsafeArenaSwap(GetTimeRequest *other) {
        if (other == this) return;
                GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    GetTimeRequest *New(::PROTOBUF_NAMESPACE_ID::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<GetTimeRequest>(arena);
    }

    using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;

    inline void CopyFrom(const GetTimeRequest &from) {
        ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
    }

    using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;

    void MergeFrom(const GetTimeRequest &from) {
        ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
    }

public:

private:
    friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;

    static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
        return "GetTimeRequest";
    }

protected:
    explicit GetTimeRequest(::PROTOBUF_NAMESPACE_ID::Arena *arena,
                            bool is_message_owned = false);

private:
public:

    static const ClassData _class_data_;

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData *GetClassData() const final;

    ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // @@protoc_insertion_point(class_scope:GetTimeRequest)
private:
    class _Internal;

    template<typename T> friend
    class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;

    typedef void InternalArenaConstructable_;
    typedef void DestructorSkippable_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_time_5fserver_2eproto;
};
// -------------------------------------------------------------------

class SetTimeResponse final :
        public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:SetTimeResponse) */ {
public:
    inline SetTimeResponse() : SetTimeResponse(nullptr) {}

    explicit constexpr SetTimeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

    SetTimeResponse(const SetTimeResponse &from);

    SetTimeResponse(SetTimeResponse &&from) noexcept
            : SetTimeResponse() {
        *this = ::std::move(from);
    }

    inline SetTimeResponse &operator=(const SetTimeResponse &from) {
        CopyFrom(from);
        return *this;
    }

    inline SetTimeResponse &operator=(SetTimeResponse &&from) noexcept {
        if (this == &from) return *this;
        if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
                ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    static const ::PROTOBUF_NAMESPACE_ID::Descriptor *descriptor() {
        return GetDescriptor();
    }

    static const ::PROTOBUF_NAMESPACE_ID::Descriptor *GetDescriptor() {
        return default_instance().GetMetadata().descriptor;
    }

    static const ::PROTOBUF_NAMESPACE_ID::Reflection *GetReflection() {
        return default_instance().GetMetadata().reflection;
    }

    static const SetTimeResponse &default_instance() {
        return *internal_default_instance();
    }

    static inline const SetTimeResponse *internal_default_instance() {
        return reinterpret_cast<const SetTimeResponse *>(
                &_SetTimeResponse_default_instance_);
    }

    static constexpr int kIndexInFileMessages =
            1;

    friend void swap(SetTimeResponse &a, SetTimeResponse &b) {
        a.Swap(&b);
    }

    inline void Swap(SetTimeResponse *other) {
        if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetOwningArena() != nullptr &&
            GetOwningArena() == other->GetOwningArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetOwningArena() == other->GetOwningArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
        }
    }

    void UnsafeArenaSwap(SetTimeResponse *other) {
        if (other == this) return;
                GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    SetTimeResponse *New(::PROTOBUF_NAMESPACE_ID::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<SetTimeResponse>(arena);
    }

    using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;

    inline void CopyFrom(const SetTimeResponse &from) {
        ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
    }

    using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;

    void MergeFrom(const SetTimeResponse &from) {
        ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
    }

public:

private:
    friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;

    static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
        return "SetTimeResponse";
    }

protected:
    explicit SetTimeResponse(::PROTOBUF_NAMESPACE_ID::Arena *arena,
                             bool is_message_owned = false);

private:
public:

    static const ClassData _class_data_;

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData *GetClassData() const final;

    ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // @@protoc_insertion_point(class_scope:SetTimeResponse)
private:
    class _Internal;

    template<typename T> friend
    class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;

    typedef void InternalArenaConstructable_;
    typedef void DestructorSkippable_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_time_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Timespec final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Timespec) */ {
public:
    inline Timespec() : Timespec(nullptr) {}

    ~Timespec() override;

    explicit constexpr Timespec(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

    Timespec(const Timespec &from);

    Timespec(Timespec &&from) noexcept
            : Timespec() {
        *this = ::std::move(from);
    }

    inline Timespec &operator=(const Timespec &from) {
        CopyFrom(from);
        return *this;
    }

    inline Timespec &operator=(Timespec &&from) noexcept {
        if (this == &from) return *this;
        if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
                ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    static const ::PROTOBUF_NAMESPACE_ID::Descriptor *descriptor() {
        return GetDescriptor();
    }

    static const ::PROTOBUF_NAMESPACE_ID::Descriptor *GetDescriptor() {
        return default_instance().GetMetadata().descriptor;
    }

    static const ::PROTOBUF_NAMESPACE_ID::Reflection *GetReflection() {
        return default_instance().GetMetadata().reflection;
    }

    static const Timespec &default_instance() {
        return *internal_default_instance();
    }

    static inline const Timespec *internal_default_instance() {
        return reinterpret_cast<const Timespec *>(
                &_Timespec_default_instance_);
    }

    static constexpr int kIndexInFileMessages =
            2;

    friend void swap(Timespec &a, Timespec &b) {
        a.Swap(&b);
    }

    inline void Swap(Timespec *other) {
        if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetOwningArena() != nullptr &&
            GetOwningArena() == other->GetOwningArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetOwningArena() == other->GetOwningArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
        }
    }

    void UnsafeArenaSwap(Timespec *other) {
        if (other == this) return;
                GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    Timespec *New(::PROTOBUF_NAMESPACE_ID::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<Timespec>(arena);
    }

    using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;

    void CopyFrom(const Timespec &from);

    using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;

    void MergeFrom(const Timespec &from);

private:
    static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message *to, const ::PROTOBUF_NAMESPACE_ID::Message &from);

public:
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;

    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;

    const char *_InternalParse(const char *ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext *ctx) final;

    uint8_t *_InternalSerialize(
            uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const final;

    int GetCachedSize() const final { return _cached_size_.Get(); }

private:
    void SharedCtor();

    void SharedDtor();

    void SetCachedSize(int size) const final;

    void InternalSwap(Timespec *other);

private:
    friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;

    static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
        return "Timespec";
    }

protected:
    explicit Timespec(::PROTOBUF_NAMESPACE_ID::Arena *arena,
                      bool is_message_owned = false);

private:
    static void ArenaDtor(void *object);

    inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena *arena);

public:

    static const ClassData _class_data_;

    const ::PROTOBUF_NAMESPACE_ID::Message::ClassData *GetClassData() const final;

    ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    enum : int {
        kSecondsFieldNumber = 1,
        kNanosecondsFieldNumber = 2,
    };

    // int64 seconds = 1;
    void clear_seconds();

    int64_t seconds() const;

    void set_seconds(int64_t value);

private:
    int64_t _internal_seconds() const;

    void _internal_set_seconds(int64_t value);

public:

    // int64 nanoseconds = 2;
    void clear_nanoseconds();

    int64_t nanoseconds() const;

    void set_nanoseconds(int64_t value);

private:
    int64_t _internal_nanoseconds() const;

    void _internal_set_nanoseconds(int64_t value);

public:

    // @@protoc_insertion_point(class_scope:Timespec)
private:
    class _Internal;

    template<typename T> friend
    class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;

    typedef void InternalArenaConstructable_;
    typedef void DestructorSkippable_;
    int64_t seconds_;
    int64_t nanoseconds_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    friend struct ::TableStruct_time_5fserver_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetTimeRequest

// -------------------------------------------------------------------

// SetTimeResponse

// -------------------------------------------------------------------

// Timespec

// int64 seconds = 1;
inline void Timespec::clear_seconds() {
    seconds_ = int64_t{0};
}

inline int64_t Timespec::_internal_seconds() const {
    return seconds_;
}

inline int64_t Timespec::seconds() const {
    // @@protoc_insertion_point(field_get:Timespec.seconds)
    return _internal_seconds();
}

inline void Timespec::_internal_set_seconds(int64_t value) {

    seconds_ = value;
}

inline void Timespec::set_seconds(int64_t value) {
    _internal_set_seconds(value);
    // @@protoc_insertion_point(field_set:Timespec.seconds)
}

// int64 nanoseconds = 2;
inline void Timespec::clear_nanoseconds() {
    nanoseconds_ = int64_t{0};
}

inline int64_t Timespec::_internal_nanoseconds() const {
    return nanoseconds_;
}

inline int64_t Timespec::nanoseconds() const {
    // @@protoc_insertion_point(field_get:Timespec.nanoseconds)
    return _internal_nanoseconds();
}

inline void Timespec::_internal_set_nanoseconds(int64_t value) {

    nanoseconds_ = value;
}

inline void Timespec::set_nanoseconds(int64_t value) {
    _internal_set_nanoseconds(value);
    // @@protoc_insertion_point(field_set:Timespec.nanoseconds)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>

#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_time_5fserver_2eproto
